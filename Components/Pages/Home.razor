@page "/"
@using Microsoft.AspNetCore.Mvc.Rendering
@using System.ComponentModel.DataAnnotations
@inject DataService data

<EditForm Model="model" OnValidSubmit="Submit">
	<div class="form-contents">
		<DataAnnotationsValidator />
		<label>
			עיר
			<InputSelect @bind-Value="model.SelectedCityId" @bind-Value:after="OnSelectedCityChanged">
				@foreach (var city in cities) {
					<option value="@city.CityId">@city.Name</option>
				}
			</InputSelect>
			<ValidationMessage For="() => model.SelectedCityId" />
		</label>

		<div class="areas">
			אזורים
			<MultiSelect @ref="multiSelect" SelectList="model.AreaSelectList" />
		</div>

		<label>
			כתובת אימייל
			<InputText @bind-Value="@model.EmailAddress" />
		</label>
		<ValidationMessage For="() => model.EmailAddress" />

		<div class="submit">
			<button type="submit">שמור</button>
		</div>
	</div>
</EditForm>

@code {
	class Model
	{
		[Range(1, 99, ErrorMessage = "יש לבחור עיר")]
		public int SelectedCityId { get; set; }
		public MultiSelectList AreaSelectList { get; set; } = new MultiSelectList(new int[] { });
		[Required(ErrorMessage = "יש להקליד כתובת אימייל")]
		[EmailAddress(ErrorMessage = "כתובת אימייל לא תקינה")]
		public string EmailAddress { get; set; } = default!;
	}

	private Model model = new Model();
	private List<City> cities = new List<City>();
	private List<Area> areas = new List<Area>();
	private MultiSelect multiSelect = default!;

	protected override void OnInitialized()
	{
		cities = data.GetCities();
	}

	private void OnSelectedCityChanged()
	{
		areas = data.GetAreas(model.SelectedCityId);
		model.AreaSelectList = new MultiSelectList(areas, "AreaId", "Name", areas.Select(a => a.AreaId));
	}

	private void Submit()
	{
		Console.WriteLine($"City: {model.SelectedCityId}");
		Console.WriteLine($"Areas: {string.Join(',', model.AreaSelectList.Where(a => a.Selected).Select(a => a.Value))}");
	}
}