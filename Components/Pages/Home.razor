@page "/"
@implements IDisposable
@using Microsoft.AspNetCore.Mvc.Rendering
@using System.ComponentModel.DataAnnotations
@inject DataService data

<EditForm EditContext="editContext" OnValidSubmit="Submit">
	<div class="form-contents">
		<DataAnnotationsValidator />
		<label>
			עיר
			<InputSelect @bind-Value="model.SelectedCityId" @bind-Value:after="OnSelectedCityChanged">
				@foreach (var city in cities) {
					<option value="@city.CityId">@city.Name</option>
				}
			</InputSelect>
			<ValidationMessage For="() => model.SelectedCityId" />
		</label>

		<div class="areas">
			אזורים
			<MultiSelect @ref="multiSelect" SelectList="model.AreaSelectList" />
		</div>
		<ValidationMessage For="() => model.AreaSelectList" />

		<label>
			כתובת אימייל
			<InputText @bind-Value="@model.EmailAddress" />
		</label>
		<ValidationMessage For="() => model.EmailAddress" />

		<div class="submit">
			<button type="submit">שמור</button>
		</div>
	</div>
</EditForm>

@code {
	public class Model
	{
		[Range(1, 99, ErrorMessage = "יש לבחור עיר")]
		public int SelectedCityId { get; set; }
		public MultiSelectList AreaSelectList { get; set; } = new MultiSelectList(new int[] { });
		[Required(ErrorMessage = "יש להקליד כתובת אימייל")]
		[EmailAddress(ErrorMessage = "כתובת אימייל לא תקינה")]
		public string EmailAddress { get; set; } = default!;
	}

	private Model model = new();
	private EditContext? editContext = default!;
	private ValidationMessageStore? messageStore;
	private List<City> cities = new List<City>();
	private List<Area> areas = new List<Area>();
	private MultiSelect multiSelect = default!;

	protected override void OnInitialized()
	{
		editContext = new(model);
		editContext.OnValidationRequested += ValidateForm;
		messageStore = new(editContext);

		cities = data.GetCities();
	}

	private void OnSelectedCityChanged()
	{
		areas = data.GetAreas(model.SelectedCityId);
		model.AreaSelectList = new MultiSelectList(areas, "AreaId", "Name", areas.Select(a => a.AreaId));
	}

	private void ValidateForm(object? sender,
				ValidationRequestedEventArgs args)
	{
		messageStore?.Clear();
		if (!model.AreaSelectList.Any()) {
			messageStore?.Add(() => model.AreaSelectList, "יש לבחור לפחות איזור אחד");
		}
	}
	private void Submit()
	{
		Console.WriteLine($"City: {model.SelectedCityId}");
		Console.WriteLine($"Areas: {string.Join(',', model.AreaSelectList.Where(a => a.Selected).Select(a => a.Value))}");
	}

	public void Dispose()
	{
		if (editContext is not null) {
			editContext.OnValidationRequested -= ValidateForm;
		}
	}
}